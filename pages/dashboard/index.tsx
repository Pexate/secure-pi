import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import router from "next/router";
import styles from "/styles/Dashboard.module.css";
import CustomNavbar from "/components/navbar/navbar";

import { useThemeContext } from "/context/context";
import { useEffect } from "react";
import { useAuthState } from "react-firebase-hooks/auth";
import { auth } from "../../firebase/firebaseconf";

import { Button } from "shards-react";

import { logOut } from "/firebase/firebaseMethods";

import { InfinitySpin } from "react-loader-spinner";
//import "/node_modules/react-loader-spinner/dist/loader/css/react-spinner-loader.css";

const Dashboard: NextPage = () => {
  const context = useThemeContext();
  const [user, loading, error] = useAuthState(auth);

  const logOutClick = async () => {
    await logOut();
    router.push("/");
  };
  useEffect(() => {
    console.log(loading);
    if (user === null && loading === false) router.push("/");
  }, [user, loading, error]);

  return (
    <div className={styles.container}>
      <Head>
        <title>SecurePi</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        className={styles.main}
        style={{
          background: context.theme === "dark" ? "#212121" : "#ffffff",
        }}
      >
        <CustomNavbar />
        <div
          className={
            context.theme === "dark"
              ? styles.dark_wrapper + " " + styles.wrapper
              : styles.light_wrapper + " " + styles.wrapper
          }
        >
          <div
            style={{
              color: context.theme === "dark" ? "white" : "",
            }}
          >
            {loading || user === null ? (
              <Loading />
            ) : (
              <>
                <b style={{ fontSize: 42, marginRight: 8 }}>
                  Prijavljen kao {user?.displayName}
                </b>{" "}
                <span style={{ fontSize: 20 }}>({user?.email})</span>
                <Button
                  theme={context.theme === "dark" ? "white" : "dark"}
                  outline
                  block
                  onClick={() => logOutClick()}
                >
                  <b>Odjavi se</b>
                </Button>
                <b>Prethodno povezani Pi-evi</b>{" "}
              </>
            )}
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Tonƒçi Crljen &copy; 2022{" "}
        </a>
      </footer>
    </div>
  );
};

export const Loading = () => {
  const context = useThemeContext();
  return (
    <div>
      <InfinitySpin
        width="200"
        color={context.theme === "dark" ? "#ffffff" : "#232323"}
      />
    </div>
  );
};

export default Dashboard;
